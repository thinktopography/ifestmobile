@orange: #EF712E;
@green: #008741;
@blue: #295DAB;
@red: #C32021;
@purple: #7A3182;
@yellow: #ffc616;
@black: #666666;

body {
	font-size: 13px;
	-webkit-touch-callout: none;
	padding: 0 !important;
}
* {
	-webkit-tap-highlight-color: rgba(0,0,0,0);
  -webkit-tap-highlight-color: transparent;
	min-height: 0;
}
*:not(input, textarea) {
	user-select: none;
}
input, textarea {
	&, &:before, &:after {
		user-select: text !important;
	}
}
.scrollable() {
  -webkit-backface-visibility: hidden;
  -webkit-overflow-scrolling: touch;
  scroll-behavior: smooth;
  overflow-y: scroll;
	&::-webkit-scrollbar-track {
	  background: fadeout(@black, 92) !important;
	}
	&::-webkit-scrollbar-thumb {
	  background: fadeout(@black, 80) !important;
	}
	&::-webkit-scrollbar {
	  width: 0 !important;
	  height: 0 !important;
	}
}

main#main {
  display: flex;
  height: 100%;
  width: 100%;
}

.link {
	cursor: pointer;
	color: @blue;
	text-decoration: underline;
}
.transition(@name, @property, @start, @end, @duration) {
	&.@{name}-enter,
	&.@{name}-exit {
		transition: @property @duration ease-in-out 0s;
		will-change: @property;
	}
	&.@{name}-enter,
	&.@{name}-exit.@{name}-exit-active {
		@{property}: @start;
	}
	&.@{name}-exit,
	&.@{name}-enter.@{name}-enter-active,
	&.@{name}-enter-done {
		@{property}: @end;
	}
}

.opacity-transition(@start, @end, @duration) {
	.transition(opacity, opacity, @start, @end, @duration)
}
.translatex-transition(@start, @end, @duration) {
	.transition(translatex, transform, translateX(@start), translateX(@end), @duration)
}
.translatey-transition(@start, @end, @duration) {
	.transition(translatey, transform, translateY(@start), translateY(@end), @duration)
}

<% for(var i = 0; i < styles.length; i++) {-%>
@import '<%= styles[i] %>';
<% } -%>
